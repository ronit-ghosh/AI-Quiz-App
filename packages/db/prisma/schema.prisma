generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  clerkId   String   @id
  email     String   @unique
  username  String
  photo     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Categories {
  id        String      @id @default(uuid())
  userId    String
  name      String      @unique
  desc      String
  questions Questions[]
  stats     Stats[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Questions {
  id          Int        @id @default(autoincrement())
  userId      String
  question    String
  categoryId  String
  category    Categories @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  options     Options[]
  correct     Option
  explanation String?
}

model Options {
  id         String    @id @default(cuid())
  optionId   Option
  option     String
  questionId Int
  question   Questions @relation(fields: [questionId], references: [id], onDelete: Cascade)
}

model Stats {
  id                String     @id @default(cuid())
  userId            String
  totalQuestions    Int
  answeredQuestions Int
  correctAnswers    Int
  incorrectAnswers  Int
  score             Int
  categoryId        String
  category          Categories @relation(fields: [categoryId], references: [id])
  answers           Answers[]
  createdAt         DateTime?  @default(now())
  updatedAt         DateTime?  @updatedAt
}

model Answers {
  id         String   @id @default(cuid())
  userId     String
  questionId Int
  optionId   String
  categoryId String
  statsId    String
  stats      Stats    @relation(fields: [statsId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ProcessingStatus {
  id         String   @id @default(uuid())
  userId     String
  categoryId String
  status     Status
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Status {
  PENDING
  GENERATED
  FAILED
}

enum Option {
  A
  B
  C
  D
}
